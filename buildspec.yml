version: 0.2

env:
  # These secrets come from Secrets Manager Parameter Store.
  parameter-store:
    DOCKERHUB_TOKEN:  DOCKERHUB_TOKEN
#    CODECOV_TOKEN: CODECOV_TOKEN  # CodeBuild will retrieve this from Systems Manager Parameter Store.


phases:
  install:
    runtime-versions:
      docker: 18
      java: openjdk8
    commands:
      # Get information about this image, the current directory, maven version, docker version, then update apt-get.
      - lsb_release -a
      - pwd
      - mvn --version
      - docker --version
      - docker info
      - apt-get update

  pre_build:
    commands:
      # Get project's version from pom.xml.
      PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)

      aws s3 cp s3://maven-build-settings/qb4j_settings.xml /root/.m2/settings.xml

  build:
    commands:
      # Builds uber jar.  Includes running unit tests.
      - mvn clean install

      # Check if the image exists in docker hub already.
      - IMAGE_EXISTS=$(docker pull joneschris/qb4j-mvc:"$PROJECT_VERSION" > /dev/null && echo "true" || echo "false")

      - echo "Does the image exist?  $IMAGE_EXISTS"

      - if [[ "$IMAGE_EXISTS" == "true" ]]; then
            # If image already exists, then stop script execution and fail the pipeline build.
            echo "joneschris/qb4j-mvc:$PROJECT_VERSION already exists"
            exit 1
        else
            docker image build -t joneschris/qb4j-mvc:"$PROJECT_VERSION" --build-arg environment=prod .
        fi

  post_build:
    commands:
      # Use password-stdin so that password does not go to shell's logs.
      - echo $DOCKERHUB_TOKEN | docker login --username joneschris --password-stdin

      - docker push joneschris/qb4j-mvc:"$PROJECT_VERSION"

        # Upload code coverage files.
        #      - curl -s https://codecov.io/bash > codecov.sh
        #      - bash codecov.sh -t $CODECOV_TOKEN

      # If PROD env variable, then deploy CloudFormation.
      # If DEV env variable, then deploy to Lightsail.
      - echo "ENV environment variable is $ENV"

      - if [[ $ENV == "dev" ]]; then
            chmod +x ./cicd/deployment/deployment_dev.sh
            sh ./cicd/deployment/deployment_dev.sh "$DOCKERHUB_TOKEN"
        elif [[ $ENV == "prod" ]]; then
            chmod +x ./cicd/deployment/deployment_prod.sh
            sh ./cicd/deployment/deployment_prod.sh
        else
            echo "Did not recognize the ENV, $ENV.  Not deploying."
        fi



artifacts:
  files:
    - target/querybuilder4jmvc-$"PROJECT_VERSION".jar
  name: querybuilder4jmvc
  discard-paths: yes
#  secondary-artifacts:
#    code_coverage:
#      files:
#        - target/site/jacoco/**/*  # All files recursively in jacoco directory.
#      name: code_coverage.zip
cache:
  paths:
    - '/root/.m2/**/*'
