{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "EcsServiceStack": {
        "id": "EcsServiceStack",
        "path": "EcsServiceStack",
        "children": {
          "TaskDefinitionExecutionRole": {
            "id": "TaskDefinitionExecutionRole",
            "path": "EcsServiceStack/TaskDefinitionExecutionRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "EcsServiceStack/TaskDefinitionExecutionRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                          }
                        },
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
                          ]
                        ]
                      }
                    ],
                    "policies": [
                      {
                        "policyName": "policy_0",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "ec2:CreateNetworkInterface",
                                "ec2:DescribeNetworkInterfaces",
                                "ec2:DeleteNetworkInterface",
                                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                "elasticloadbalancing:DeregisterTargets",
                                "elasticloadbalancing:Describe*",
                                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                "elasticloadbalancing:RegisterTargets",
                                "ec2:Describe*",
                                "ec2:AuthorizeSecurityGroupIngress"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    ]
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "EcsServiceStack/TaskDefinitionExecutionRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "EcsServiceStack/TaskDefinitionExecutionRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "LoadBalancedFargateServiceTaskDefwebLogGroup8A3DD153",
                                  "Arn"
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "TaskDefinitionExecutionRoleDefaultPolicyFBB0C586",
                        "roles": [
                          {
                            "Ref": "TaskDefinitionExecutionRole3138A4FF"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "Vpc": {
            "id": "Vpc",
            "path": "EcsServiceStack/Vpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "EcsServiceStack/Vpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "EcsServiceStack/Vpc"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "EcsServiceStack/Vpc/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "EcsServiceStack/Vpc/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "EcsServiceStack/Vpc/PublicSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "EcsServiceStack/Vpc/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "EcsServiceStack/Vpc/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "EcsServiceStack/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "EcsServiceStack/Vpc/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "EcsServiceStack/Vpc/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VpcIGWD7BA715C"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "EcsServiceStack/Vpc/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "EcsServiceStack/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "EcsServiceStack/Vpc/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "VpcPublicSubnet1EIPD7E02669",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "EcsServiceStack/Vpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "EcsServiceStack/Vpc/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "EcsServiceStack/Vpc/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "EcsServiceStack/Vpc/PublicSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "EcsServiceStack/Vpc/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "EcsServiceStack/Vpc/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "EcsServiceStack/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "EcsServiceStack/Vpc/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet2Subnet691E08A3"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "EcsServiceStack/Vpc/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VpcIGWD7BA715C"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "EcsServiceStack/Vpc/PublicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "EcsServiceStack/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "EcsServiceStack/Vpc/PublicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "VpcPublicSubnet2EIP3C605A87",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "VpcPublicSubnet2Subnet691E08A3"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "EcsServiceStack/Vpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "EcsServiceStack/Vpc/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "EcsServiceStack/Vpc/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "EcsServiceStack/Vpc/PrivateSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "EcsServiceStack/Vpc/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "EcsServiceStack/Vpc/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "EcsServiceStack/Vpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "EcsServiceStack/Vpc/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
                        },
                        "subnetId": {
                          "Ref": "VpcPrivateSubnet1Subnet536B997A"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "EcsServiceStack/Vpc/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "EcsServiceStack/Vpc/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "EcsServiceStack/Vpc/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.192.0/18",
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "EcsServiceStack/Vpc/PrivateSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "EcsServiceStack/Vpc/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "EcsServiceStack/Vpc/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "EcsServiceStack/Vpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "EcsServiceStack/Vpc/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
                        },
                        "subnetId": {
                          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "EcsServiceStack/Vpc/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VpcPublicSubnet2NATGateway9182C01D"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "EcsServiceStack/Vpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "EcsServiceStack/Vpc"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "EcsServiceStack/Vpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "Vpc8378EB38"
                    },
                    "internetGatewayId": {
                      "Ref": "VpcIGWD7BA715C"
                    }
                  }
                }
              }
            }
          },
          "LoadBalancedFargateService": {
            "id": "LoadBalancedFargateService",
            "path": "EcsServiceStack/LoadBalancedFargateService",
            "children": {
              "LB": {
                "id": "LB",
                "path": "EcsServiceStack/LoadBalancedFargateService/LB",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "EcsServiceStack/LoadBalancedFargateService/LB/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                      "aws:cdk:cloudformation:props": {
                        "scheme": "internet-facing",
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "LoadBalancedFargateServiceLBSecurityGroupD490C37A",
                              "GroupId"
                            ]
                          }
                        ],
                        "subnets": [
                          {
                            "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
                          },
                          {
                            "Ref": "VpcPublicSubnet2Subnet691E08A3"
                          }
                        ],
                        "type": "application"
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "EcsServiceStack/LoadBalancedFargateService/LB/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "EcsServiceStack/LoadBalancedFargateService/LB/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "Automatically created Security Group for ELB EcsServiceStackLoadBalancedFargateServiceLB964400F6",
                            "securityGroupIngress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "ipProtocol": "tcp",
                                "fromPort": 80,
                                "toPort": 80,
                                "description": "Allow from anyone on port 80"
                              }
                            ],
                            "vpcId": {
                              "Ref": "Vpc8378EB38"
                            }
                          }
                        }
                      },
                      "to EcsServiceStackLoadBalancedFargateServiceSecurityGroupAAD1E9CC:8080": {
                        "id": "to EcsServiceStackLoadBalancedFargateServiceSecurityGroupAAD1E9CC:8080",
                        "path": "EcsServiceStack/LoadBalancedFargateService/LB/SecurityGroup/to EcsServiceStackLoadBalancedFargateServiceSecurityGroupAAD1E9CC:8080",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                          "aws:cdk:cloudformation:props": {
                            "groupId": {
                              "Fn::GetAtt": [
                                "LoadBalancedFargateServiceLBSecurityGroupD490C37A",
                                "GroupId"
                              ]
                            },
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "destinationSecurityGroupId": {
                              "Fn::GetAtt": [
                                "LoadBalancedFargateServiceSecurityGroup886FFD49",
                                "GroupId"
                              ]
                            },
                            "fromPort": 8080,
                            "toPort": 8080
                          }
                        }
                      }
                    }
                  },
                  "PublicListener": {
                    "id": "PublicListener",
                    "path": "EcsServiceStack/LoadBalancedFargateService/LB/PublicListener",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "EcsServiceStack/LoadBalancedFargateService/LB/PublicListener/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                          "aws:cdk:cloudformation:props": {
                            "defaultActions": [
                              {
                                "targetGroupArn": {
                                  "Ref": "LoadBalancedFargateServiceLBPublicListenerECSGroupA24AD192"
                                },
                                "type": "forward"
                              }
                            ],
                            "loadBalancerArn": {
                              "Ref": "LoadBalancedFargateServiceLB454B0F67"
                            },
                            "port": 80,
                            "protocol": "HTTP"
                          }
                        }
                      },
                      "ECSGroup": {
                        "id": "ECSGroup",
                        "path": "EcsServiceStack/LoadBalancedFargateService/LB/PublicListener/ECSGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "EcsServiceStack/LoadBalancedFargateService/LB/PublicListener/ECSGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                              "aws:cdk:cloudformation:props": {
                                "port": 80,
                                "protocol": "HTTP",
                                "targetType": "ip",
                                "vpcId": {
                                  "Ref": "Vpc8378EB38"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "LoadBalancerDNS": {
                "id": "LoadBalancerDNS",
                "path": "EcsServiceStack/LoadBalancedFargateService/LoadBalancerDNS"
              },
              "ServiceURL": {
                "id": "ServiceURL",
                "path": "EcsServiceStack/LoadBalancedFargateService/ServiceURL"
              },
              "TaskDef": {
                "id": "TaskDef",
                "path": "EcsServiceStack/LoadBalancedFargateService/TaskDef",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "EcsServiceStack/LoadBalancedFargateService/TaskDef/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                      "aws:cdk:cloudformation:props": {
                        "containerDefinitions": [
                          {
                            "essential": true,
                            "image": "joneschris/qb4j-mvc:1",
                            "name": "web",
                            "portMappings": [
                              {
                                "containerPort": 8080,
                                "protocol": "tcp"
                              }
                            ],
                            "logConfiguration": {
                              "logDriver": "awslogs",
                              "options": {
                                "awslogs-group": {
                                  "Ref": "LoadBalancedFargateServiceTaskDefwebLogGroup8A3DD153"
                                },
                                "awslogs-stream-prefix": "LoadBalancedFargateService",
                                "awslogs-region": {
                                  "Ref": "AWS::Region"
                                }
                              }
                            }
                          }
                        ],
                        "cpu": "256",
                        "executionRoleArn": {
                          "Fn::GetAtt": [
                            "TaskDefinitionExecutionRole3138A4FF",
                            "Arn"
                          ]
                        },
                        "family": "EcsServiceStackLoadBalancedFargateServiceTaskDef55A885EA",
                        "memory": "512",
                        "networkMode": "awsvpc",
                        "requiresCompatibilities": [
                          "FARGATE"
                        ],
                        "taskRoleArn": {
                          "Fn::GetAtt": [
                            "TaskDefinitionExecutionRole3138A4FF",
                            "Arn"
                          ]
                        }
                      }
                    }
                  },
                  "web": {
                    "id": "web",
                    "path": "EcsServiceStack/LoadBalancedFargateService/TaskDef/web",
                    "children": {
                      "LogGroup": {
                        "id": "LogGroup",
                        "path": "EcsServiceStack/LoadBalancedFargateService/TaskDef/web/LogGroup",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "EcsServiceStack/LoadBalancedFargateService/TaskDef/web/LogGroup/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                              "aws:cdk:cloudformation:props": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Service": {
                "id": "Service",
                "path": "EcsServiceStack/LoadBalancedFargateService/Service",
                "children": {
                  "Service": {
                    "id": "Service",
                    "path": "EcsServiceStack/LoadBalancedFargateService/Service/Service",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                      "aws:cdk:cloudformation:props": {
                        "cluster": {
                          "Ref": "EcsDefaultClusterMnL3mNNYNVpc18E0451A"
                        },
                        "deploymentConfiguration": {
                          "maximumPercent": 200,
                          "minimumHealthyPercent": 50
                        },
                        "desiredCount": 1,
                        "enableEcsManagedTags": false,
                        "healthCheckGracePeriodSeconds": 60,
                        "launchType": "FARGATE",
                        "loadBalancers": [
                          {
                            "targetGroupArn": {
                              "Ref": "LoadBalancedFargateServiceLBPublicListenerECSGroupA24AD192"
                            },
                            "containerName": "web",
                            "containerPort": 8080
                          }
                        ],
                        "networkConfiguration": {
                          "awsvpcConfiguration": {
                            "assignPublicIp": "ENABLED",
                            "subnets": [
                              {
                                "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
                              },
                              {
                                "Ref": "VpcPublicSubnet2Subnet691E08A3"
                              }
                            ],
                            "securityGroups": [
                              {
                                "Fn::GetAtt": [
                                  "LoadBalancedFargateServiceSecurityGroup886FFD49",
                                  "GroupId"
                                ]
                              }
                            ]
                          }
                        },
                        "taskDefinition": {
                          "Ref": "LoadBalancedFargateServiceTaskDef16FE5251"
                        }
                      }
                    }
                  },
                  "SecurityGroup": {
                    "id": "SecurityGroup",
                    "path": "EcsServiceStack/LoadBalancedFargateService/Service/SecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "EcsServiceStack/LoadBalancedFargateService/Service/SecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "EcsServiceStack/LoadBalancedFargateService/Service/SecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "vpcId": {
                              "Ref": "Vpc8378EB38"
                            }
                          }
                        }
                      },
                      "from EcsServiceStackLoadBalancedFargateServiceLBSecurityGroup187B980A:8080": {
                        "id": "from EcsServiceStackLoadBalancedFargateServiceLBSecurityGroup187B980A:8080",
                        "path": "EcsServiceStack/LoadBalancedFargateService/Service/SecurityGroup/from EcsServiceStackLoadBalancedFargateServiceLBSecurityGroup187B980A:8080",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                          "aws:cdk:cloudformation:props": {
                            "ipProtocol": "tcp",
                            "description": "Load balancer to target",
                            "fromPort": 8080,
                            "groupId": {
                              "Fn::GetAtt": [
                                "LoadBalancedFargateServiceSecurityGroup886FFD49",
                                "GroupId"
                              ]
                            },
                            "sourceSecurityGroupId": {
                              "Fn::GetAtt": [
                                "LoadBalancedFargateServiceLBSecurityGroupD490C37A",
                                "GroupId"
                              ]
                            },
                            "toPort": 8080
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "EcsDefaultClusterMnL3mNNYNVpc": {
            "id": "EcsDefaultClusterMnL3mNNYNVpc",
            "path": "EcsServiceStack/EcsDefaultClusterMnL3mNNYNVpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "EcsServiceStack/EcsDefaultClusterMnL3mNNYNVpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {}
                }
              }
            }
          }
        }
      },
      "CodeBuildStack": {
        "id": "CodeBuildStack",
        "path": "CodeBuildStack",
        "children": {
          "CodeBuildDependencyCacheBucket": {
            "id": "CodeBuildDependencyCacheBucket",
            "path": "CodeBuildStack/CodeBuildDependencyCacheBucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CodeBuildStack/CodeBuildDependencyCacheBucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketName": "m2-dependencies",
                    "publicAccessBlockConfiguration": {
                      "blockPublicPolicy": true,
                      "restrictPublicBuckets": true
                    }
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "CodeBuildStack/CodeBuildDependencyCacheBucket/Notifications"
              }
            }
          },
          "CodeBuildArtifactBucket": {
            "id": "CodeBuildArtifactBucket",
            "path": "CodeBuildStack/CodeBuildArtifactBucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CodeBuildStack/CodeBuildArtifactBucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketName": "qb4j-mvc",
                    "publicAccessBlockConfiguration": {
                      "blockPublicPolicy": true,
                      "restrictPublicBuckets": true
                    }
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "CodeBuildStack/CodeBuildArtifactBucket/Notifications"
              }
            }
          },
          "CodeBuildRole": {
            "id": "CodeBuildRole",
            "path": "CodeBuildStack/CodeBuildRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CodeBuildStack/CodeBuildRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "codebuild.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policies": [
                      {
                        "policyName": "policy_0",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "s3:GetObject",
                                "s3:GetBucket",
                                "s3:List*"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                "arn:aws:s3:::maven-build-settings",
                                "arn:aws:s3:::maven-build-settings/*"
                              ]
                            },
                            {
                              "Action": "ssm:GetParameters",
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    ]
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "CodeBuildStack/CodeBuildRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CodeBuildStack/CodeBuildRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*",
                                "s3:PutObject*",
                                "s3:Abort*"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "CodeBuildArtifactBucket2C7834D4",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "CodeBuildArtifactBucket2C7834D4",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*",
                                "s3:PutObject*",
                                "s3:Abort*"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "CodeBuildDependencyCacheBucket1F3EBCDD",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "CodeBuildDependencyCacheBucket1F3EBCDD",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":logs:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":log-group:/aws/codebuild/",
                                      {
                                        "Ref": "CodeBuildProject4B91CF3F"
                                      }
                                    ]
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":logs:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":log-group:/aws/codebuild/",
                                      {
                                        "Ref": "CodeBuildProject4B91CF3F"
                                      },
                                      ":*"
                                    ]
                                  ]
                                }
                              ]
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "CodeBuildRoleDefaultPolicy829527DE",
                        "roles": [
                          {
                            "Ref": "CodeBuildRole728CBADE"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "CodeBuildProject": {
            "id": "CodeBuildProject",
            "path": "CodeBuildStack/CodeBuildProject",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CodeBuildStack/CodeBuildProject/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                  "aws:cdk:cloudformation:props": {
                    "artifacts": {
                      "type": "S3",
                      "location": {
                        "Ref": "CodeBuildArtifactBucket2C7834D4"
                      },
                      "path": "build/",
                      "namespaceType": "BUILD_ID",
                      "name": "querybuilder4jmvc-prod.jar",
                      "packaging": "ZIP"
                    },
                    "environment": {
                      "type": "LINUX_CONTAINER",
                      "image": "aws/codebuild/standard:1.0",
                      "privilegedMode": true,
                      "computeType": "BUILD_GENERAL1_SMALL"
                    },
                    "serviceRole": {
                      "Fn::GetAtt": [
                        "CodeBuildRole728CBADE",
                        "Arn"
                      ]
                    },
                    "source": {
                      "type": "GITHUB",
                      "gitCloneDepth": 1,
                      "reportBuildStatus": true,
                      "location": "https://github.com/jones-chris/QueryBuilder4JMVC.git"
                    },
                    "badgeEnabled": true,
                    "cache": {
                      "type": "S3",
                      "location": {
                        "Fn::Join": [
                          "/",
                          [
                            {
                              "Ref": "CodeBuildDependencyCacheBucket1F3EBCDD"
                            },
                            {
                              "Ref": "AWS::NoValue"
                            }
                          ]
                        ]
                      }
                    },
                    "name": "QueryBuilder4JMVC",
                    "sourceVersion": "master"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}